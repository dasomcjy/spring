package com.spring.board;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;

import org.springframework.stereotype.Repository;

import jakarta.annotation.Resource;

@Repository("boardDAO")		// Spring Framework 에서 자동으로 객체가 생성되어서 RAM(메모리)에 로드  
public class BoardDAO {
	
	// DAO : Data Access Object : 
	// DataBase에 CRUD 하는 객체 : Select, Insert, Update, Delete
	
	// 1. JDBC 관련 변수를 선언 : Connection, Statement/PreparedStatement, ResultSet 
	private Connection conn = null;
	private Statement stmt = null;
	private PreparedStatement pstmt = null;			//주로사용 
	private ResultSet rs = null; 
	
	// 2. SQL 쿼리를 담는 상수에 담아서 처리 변수 생성후 할당 : 상수명 : 전체 대문자로 사용
	private final String BOARD_INSERT = 
			"insert into board(seq, title, writer, content) values (?,?,?,?)"; 
	private final String BOARD_UPDATE = " "; 
	private final String BOARD_DELETE = " "; 
	private final String BOARD_GET = " "; 			//DataBase의 테이블에서 1개의 레코드만 출력(상세보기)
	private final String BOARD_LIST = " "; 			//DataBase의 테이블의 여러개의 레코드를 LIST (ArrayList() ) 
	
	// 3. 메소드 : insertBoard(), updateBoard, deleteBoard(), getBoard() 
	
	
	
	
	
}
